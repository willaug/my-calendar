name: MyCalendar CI
on: push

jobs:

  commit-continuos-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.1]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up node ${{ matrix.node-version }}v
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install all dependencies
      run: npm ci

    - name: Lint commit message
      run: echo '${{ github.event.head_commit.message }}' | npx commitlint

  server-continuos-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.1]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_PORT: 5432
          POSTGRES_DB: my_calendar
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up node ${{ matrix.node-version }}v
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      working-directory: packages/server
      run: npm ci

    - name: Lint
      working-directory: packages/server
      run: npm run lint

    - name: Test
      working-directory: packages/server
      run: npm t
      env:
        DB_PASS_DEV: admin

  client-continuos-integration:
    needs:
      - server-continuos-integration

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node ${{ matrix.node-version }}v
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        working-directory: packages/client
        run: npm ci

      - name: Lint
        working-directory: packages/client
        run: npm run lint

      - name: Test
        working-directory: packages/client
        run: npm t

      - name: End-to-End (e2e)
        working-directory: packages/client
        run: npm run start-api-dev & npm start & TZ=America/Sao_Paulo npx cypress run
        env:
          DB_PASS_DEV: admin

